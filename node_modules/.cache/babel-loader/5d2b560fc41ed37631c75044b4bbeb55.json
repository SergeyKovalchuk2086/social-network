{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\react\\\\first_project\\\\react-01\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport './Dialogs.css';\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport StoreContext from '../../StoreContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DialogsContainer(props) {\n  let state = props.store.getState().dialogsPage; // let dialogsElements = state.dialogs\n  // \t.map(d => <DialogItem name={d.name} id={d.id} />)\n  // let messagesElements = state.messages\n  // \t.map(m => <Message message={m.message} />)\n  // let newMessageBody = state.newMessageBody;\n\n  let onSendMessageClick = () => {\n    props.store.dispatch(sendMessageCreator());\n  };\n\n  let onNewMessageChange = body => {\n    props.store.dispatch(updateNewMessageBodyCreator(body));\n  };\n\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: [\" \", store => {\n      /*#__PURE__*/\n      _jsxDEV(Dialogs, {\n        updateNewMessageBody: onNewMessageChange,\n        sendMessage: onSendMessageClick,\n        dialogsPage: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }, this);\n    }]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_c = DialogsContainer;\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/react/first_project/react-01/src/components/Dialogs/DialogsContainer.jsx"],"names":["sendMessageCreator","updateNewMessageBodyCreator","Dialogs","StoreContext","DialogsContainer","props","state","store","getState","dialogsPage","onSendMessageClick","dispatch","onNewMessageChange","body"],"mappings":";AAAA,OAAO,eAAP;AACA,SAASA,kBAAT,EAA6BC,2BAA7B,QAAgE,6BAAhE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAEhC,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,WAAnC,CAFgC,CAIhC;AACA;AAEA;AACA;AAEA;;AAEA,MAAIC,kBAAkB,GAAG,MAAM;AAC9BL,IAAAA,KAAK,CAACE,KAAN,CAAYI,QAAZ,CAAqBX,kBAAkB,EAAvC;AACA,GAFD;;AAIA,MAAIY,kBAAkB,GAAIC,IAAD,IAAU;AAClCR,IAAAA,KAAK,CAACE,KAAN,CAAYI,QAAZ,CAAqBV,2BAA2B,CAACY,IAAD,CAAhD;AACA,GAFD;;AAIA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAA,oBACLN,KAAD,IAAW;AACV;AAAA,cAAC,OAAD;AAAS,QAAA,oBAAoB,EAAEK,kBAA/B;AACC,QAAA,WAAW,EAAEF,kBADd;AAEC,QAAA,WAAW,EAAEJ;AAFd;AAAA;AAAA;AAAA;AAAA;AAIA,KANK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASA;;KA7BQF,gB;AA+BT,eAAeA,gBAAf","sourcesContent":["import './Dialogs.css';\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport StoreContext from '../../StoreContext';\r\n\r\nfunction DialogsContainer(props) {\r\n\r\n\tlet state = props.store.getState().dialogsPage;\r\n\r\n\t// let dialogsElements = state.dialogs\r\n\t// \t.map(d => <DialogItem name={d.name} id={d.id} />)\r\n\r\n\t// let messagesElements = state.messages\r\n\t// \t.map(m => <Message message={m.message} />)\r\n\r\n\t// let newMessageBody = state.newMessageBody;\r\n\r\n\tlet onSendMessageClick = () => {\r\n\t\tprops.store.dispatch(sendMessageCreator())\r\n\t}\r\n\r\n\tlet onNewMessageChange = (body) => {\r\n\t\tprops.store.dispatch(updateNewMessageBodyCreator(body));\r\n\t}\r\n\r\n\treturn <StoreContext.Consumer> {\r\n\t\t(store) => {\r\n\t\t\t<Dialogs updateNewMessageBody={onNewMessageChange}\r\n\t\t\t\tsendMessage={onSendMessageClick}\r\n\t\t\t\tdialogsPage={state}\r\n\t\t\t/>\r\n\t\t}\r\n\t}\r\n\t</StoreContext.Consumer>\r\n}\r\n\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}