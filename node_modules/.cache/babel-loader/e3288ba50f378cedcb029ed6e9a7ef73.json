{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nlet SET_USERS = 'SET_USERS';\nlet initialState = {\n  users: [{\n    id: 1,\n    photoUrlfullName: 'Sergey',\n    status: 'Junior',\n    location: 'Tomsk',\n    country: 'Russia',\n    followed: false\n  }, {\n    id: 2,\n    fullName: 'Dmitriy',\n    status: 'Boss',\n    location: 'Tomsk',\n    country: 'Russia',\n    followed: true\n  }, {\n    id: 3,\n    fullName: 'Alex',\n    status: 'Dranik',\n    location: 'Tomsk',\n    country: 'Russia',\n    followed: true\n  }]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = usersId => ({\n  type: FOLLOW,\n  usersId\n});\nexport const unFollowAC = usersId => ({\n  type: UNFOLLOW,\n  usersId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/react/first_project/react-01/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","id","photoUrlfullName","status","location","country","followed","fullName","usersReducer","state","action","type","map","u","userId","followAC","usersId","unFollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,IAAIC,SAAS,GAAG,WAAhB;AAGA,IAAIC,YAAY,GAAG;AAClBC,EAAAA,KAAK,EACJ,CACC;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,gBAAgB,EAAE,QAA3B;AAAqCC,IAAAA,MAAM,EAAE,QAA7C;AAAuDC,IAAAA,QAAQ,EAAE,OAAjE;AAA0EC,IAAAA,OAAO,EAAE,QAAnF;AAA6FC,IAAAA,QAAQ,EAAE;AAAvG,GADD,EAGC;AAAEL,IAAAA,EAAE,EAAE,CAAN;AAASM,IAAAA,QAAQ,EAAE,SAAnB;AAA8BJ,IAAAA,MAAM,EAAE,MAAtC;AAA8CC,IAAAA,QAAQ,EAAE,OAAxD;AAAiEC,IAAAA,OAAO,EAAE,QAA1E;AAAoFC,IAAAA,QAAQ,EAAE;AAA9F,GAHD,EAKC;AAAEL,IAAAA,EAAE,EAAE,CAAN;AAASM,IAAAA,QAAQ,EAAE,MAAnB;AAA2BJ,IAAAA,MAAM,EAAE,QAAnC;AAA6CC,IAAAA,QAAQ,EAAE,OAAvD;AAAgEC,IAAAA,OAAO,EAAE,QAAzE;AAAmFC,IAAAA,QAAQ,EAAE;AAA7F,GALD;AAFiB,CAAnB;;AAWA,MAAME,YAAY,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKf,MAAL;AACC,aAAO,EACN,GAAGa,KADG;AAENT,QAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,CAAYY,GAAZ,CAAgBC,CAAC,IAAI;AAC3B,cAAIA,CAAC,CAACZ,EAAF,KAASS,MAAM,CAACI,MAApB,EAA4B;AAC3B,mBAAO,EAAE,GAAGD,CAAL;AAAQP,cAAAA,QAAQ,EAAE;AAAlB,aAAP;AACA;;AACD,iBAAOO,CAAP;AACA,SALM;AAFD,OAAP;;AASD,SAAKhB,QAAL;AACC,aAAO,EACN,GAAGY,KADG;AAENT,QAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,CAAYY,GAAZ,CAAgBC,CAAC,IAAI;AAC3B,cAAIA,CAAC,CAACZ,EAAF,KAASS,MAAM,CAACI,MAApB,EAA4B;AAC3B,mBAAO,EAAE,GAAGD,CAAL;AAAQP,cAAAA,QAAQ,EAAE;AAAlB,aAAP;AACA;;AACD,iBAAOO,CAAP;AACA,SALM;AAFD,OAAP;;AASD,SAAKf,SAAL;AACC,aAAO,EAAE,GAAGW,KAAL;AAAYT,QAAAA,KAAK,EAAE,CAAC,GAAGS,KAAK,CAACT,KAAV,EAAiB,GAAGU,MAAM,CAACV,KAA3B;AAAnB,OAAP;;AACD;AACC,aAAOS,KAAP;AAxBF;AA0BA,CA3BD;;AA6BA,OAAO,MAAMM,QAAQ,GAAIC,OAAD,KAAc;AAAEL,EAAAA,IAAI,EAAEf,MAAR;AAAgBoB,EAAAA;AAAhB,CAAd,CAAjB;AACP,OAAO,MAAMC,UAAU,GAAID,OAAD,KAAc;AAAEL,EAAAA,IAAI,EAAEd,QAAR;AAAkBmB,EAAAA;AAAlB,CAAd,CAAnB;AACP,OAAO,MAAME,UAAU,GAAIlB,KAAD,KAAY;AAAEW,EAAAA,IAAI,EAAEb,SAAR;AAAmBE,EAAAA;AAAnB,CAAZ,CAAnB;AAEP,eAAeQ,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nlet SET_USERS = 'SET_USERS';\r\n\r\n\r\nlet initialState = {\r\n\tusers:\r\n\t\t[\r\n\t\t\t{ id: 1, photoUrlfullName: 'Sergey', status: 'Junior', location: 'Tomsk', country: 'Russia', followed: false },\r\n\r\n\t\t\t{ id: 2, fullName: 'Dmitriy', status: 'Boss', location: 'Tomsk', country: 'Russia', followed: true },\r\n\r\n\t\t\t{ id: 3, fullName: 'Alex', status: 'Dranik', location: 'Tomsk', country: 'Russia', followed: true },\r\n\t\t]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userId) {\r\n\t\t\t\t\t\treturn { ...u, followed: true }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u;\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userId) {\r\n\t\t\t\t\t\treturn { ...u, followed: false }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u;\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\tcase SET_USERS:\r\n\t\t\treturn { ...state, users: [...state.users, ...action.users] }\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const followAC = (usersId) => ({ type: FOLLOW, usersId });\r\nexport const unFollowAC = (usersId) => ({ type: UNFOLLOW, usersId });\r\nexport const setUsersAC = (users) => ({ type: SET_USERS, users });\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}